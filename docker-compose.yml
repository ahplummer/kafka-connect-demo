version: '3'
services:
  #This is the Kafka server itself
  kafka:
    image: 'debezium/kafka:1.3'
    container_name: kafka
    hostname: kafka
    ports:
        - '9092:9092'
    environment:
        - ADVERTISED_HOST_NAME=kafka
        - ZOOKEEPER_CONNECT=zookeeper:2181
        - CREATE_TOPICS=testtopic:1:1

  #This is Zookeeper. I quite honestly don't know why it's required. Magic dust stuff.
  zookeeper:
    image: 'debezium/zookeeper:1.3'
    container_name: zookeeper
    hostname: zookeeper
    ports:
        - '2181:2181'
        - '2888:2888'
        - '3888:3888'
    environment:
        - ZOOKEEPER_CLIENT_PORT=2181

  #This is Full blown SQL Server, representing the 'source' system that apps interact with.
  sqlsource:
    image: 'mcr.microsoft.com/mssql/server:2019-latest'
    container_name: sqlsource
    hostname: sqlsource
    ports:
      - '1491:1433'
    volumes:
      - './sqlsource:/var/opt/mssql'
      - './scripts/:/var/scripts'
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: Pa^^w0rd
      CONFIG_FILE: /var/scripts/init_sqlsource.sql


  #This is Full blown SQL Server, representing the 'destination' system that is replicated from source.
  sqldestination:
    image: 'mcr.microsoft.com/mssql/server:2019-latest'
    container_name: sqldestination
    hostname: sqldestination
    depends_on:
      - sqlsource
    ports:
      - '1492:1433'
    volumes:
      - './sqldestination:/var/opt/mssql'
      - './scripts/:/var/scripts'
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: Pa^^w0rd
      CONFIG_FILE: /var/scripts/init_sqldestination.sql

  #This is Full blown SQL Server, does replication.
  sqldistributor:
    image: 'mcr.microsoft.com/mssql/server:2019-latest'
    container_name: sqldistributor
    hostname: sqldistributor
    depends_on:
      - sqldestination
    ports:
      - '1493:1433'
    volumes:
      - './sqldistributor:/var/opt/mssql'
      - './scripts/:/var/scripts'
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: Pa^^w0rd
      CONFIG_FILE: /var/scripts/init_sqldistributor.sql

  pythondriver:
    container_name: pythondriver
    build:
      context: ./pythondriver/
      dockerfile: Dockerfile
    environment:
      - AWS_STREAM_REGION=${TF_VAR_REGION}
      - AWS_STREAM_NAME=${TF_VAR_KINESIS_STREAM}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - BOOTSTRAP_SERVER=kafka:9092

  #This connects to SQL Server (Destination of Replication), and posts to Kafka topic
  connector:
    image: 'debezium/connect:1.3'
    container_name: connector
    hostname: connector
    ports:
        - '8083:8083'
    volumes:
        - './scripts/:/var/scripts'
    depends_on:
      - sqldestination
    environment:
        - GROUP_ID=1
        - CONFIG_STORAGE_TOPIC=my_connect_configs
        - OFFSET_STORAGE_TOPIC=my_connect_offsets
        - STATUS_STORAGE_TOPIC=my_connect_statuses
        - BOOTSTRAP_SERVERS=kafka:9092

volumes:
  sqlsource: null
  sqldestination: null
  sqldistributor: null
  connector: null
